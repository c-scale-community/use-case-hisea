configfile: "workflow/config.yml"

rule set_pythonpath:
    params:
        home = lambda wc: "${HOME}"
    shell:
        """
        if ! echo "${{PYTHONPATH:-}}" | tr : '\n' | grep -q -e '{params.home}/use-case-hisea/scripts/workflow_helpers' -e '{params.home}/use-case-hisea/scripts/delft3dfm_helpers'
        then
            echo "export PYTHONPATH=\"{params.home}/use-case-hisea/scripts/workflow_helpers:{params.home}/use-case-hisea/scripts/delft3dfm_helpers\":${{PYTHONPATH:-}}" >> ~/.bashrc && \
            if [[ $- == *i* ]]; then source ~/.bashrc; fi
        else
            echo "PYTHONPATH is already set."
        fi
        """

from pytools.persistent_dict import PersistentDict
from datetime import date
from workflow_helpers import set_date_range

rule set_date_range:
    input:
        "workflow/config.yml"
    output:
        expand("workflow/logs/{current_date}_set_date_range.done", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        run_mode = config['run_mode'],
        forecast_window_mid_pt = config['forecast_window_mid_pt'],
        forecast_window = config['forecast_window'],
        tstart = config['tstart'],
        tstop = config['tstop']
    run:
        if params.run_mode == 'forecast':
            date_min, date_max = set_date_range(run_mode=params.run_mode,
                                                forecast_window_mid_pt=params.forecast_window_mid_pt,
                                                forecast_window=params.forecast_window,
                                                outfile='workflow/config.yml')
        else:
            date_min, date_max = set_date_range(run_mode=params.run_mode,
                                                tstart=params.tstart,
                                                tstop=params.tstop,
                                                outfile='workflow/config.yml')
        touch(expand("workflow/logs/{current_date}_set_date_range.done", current_date=date.today().strftime('%Y-%m-%d')))

rule download_era5:
    input:
        expand("workflow/logs/{current_date}_set_date_range.done", current_date=date.today().strftime('%Y-%m-%d')),
    output:
        expand("workflow/logs/{current_date}_download_era5.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_download_era5.log", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        cdsapirc_loc = lambda wc: config['cdsapirc_loc'],
        lon_min = config['lon_min'],
        lon_max = config['lon_max'],
        lat_min = config['lat_min'],
        lat_max = config['lat_max'],
        date_min = config['date_min'],
        date_max = config['date_max'],
    shell:
        """
        sudo docker run \
            -v {params.cdsapirc_loc}:/root/.cdsapirc \
            -v {data_dir_path}/download/{date.today().strftime('%Y-%m-%d')}:/data \
            download-input python download_era5.py \
                --longitude_min {params.lon_min} \
                --longitude_max {params.lon_max} \
                --latitude_min {params.lat_min} \
                --latitude_max {params.lat_max} \
                --date_min {params.date_min} \
                --date_max {params.date_max} && \
        touch workflow/logs/{date.today().strftime('%Y-%m-%d')}_download_era5.done
        """

rule download_cmems_physics:
    input:
        expand("workflow/logs/{current_date}_download_era5.done", current_date=date.today().strftime('%Y-%m-%d'))
    output:
        expand("workflow/logs/{current_date}_download_cmems_physics.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_download_cmems_physics.log", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        cmems_uname = config['cmems_uname'],
        cmems_pwd = config['cmems_pwd'],
        lon_min = config['lon_min'],
        lon_max = config['lon_max'],
        lat_min = config['lat_min'],
        lat_max = config['lat_max'],
        date_min = config['date_min'],
        date_max = config['date_max']
    shell:
        """
        sudo docker run \
            -v {data_dir_path}/download/{date.today().strftime('%Y-%m-%d')}:/data \
            download-input python download_cmems_physics.py \
                --username {params.cmems_uname} \
                --password {params.cmems_pwd} \
                --longitude_min {params.lon_min} \
                --longitude_max {params.lon_max} \
                --latitude_min {params.lat_min} \
                --latitude_max {params.lat_max} \
                --date_min {params.date_min} \
                --date_max {params.date_max} && \
        touch workflow/logs/{date.today().strftime('%Y-%m-%d')}_download_cmems_physics.done
        """

rule download_cmems_biogeochemistry:
    input:
        expand("workflow/logs/{current_date}_download_era5.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_cmems_physics.done", current_date=date.today().strftime('%Y-%m-%d'))
    output:
        expand("workflow/logs/{current_date}_download_cmems_biogeochemistry.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_download_cmems_biogeochemistry.log", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        cmems_uname = config['cmems_uname'],
        cmems_pwd = config['cmems_pwd'],
        lon_min = config['lon_min'],
        lon_max = config['lon_max'],
        lat_min = config['lat_min'],
        lat_max = config['lat_max'],
        date_min = config['date_min'],
        date_max = config['date_max']
    shell:
        """
        sudo docker run \
            -v {data_dir_path}/download/{date.today().strftime('%Y-%m-%d')}:/data \
            download-input python download_cmems_biogeochemistry.py \
                --username {params.cmems_uname} \
                --password {params.cmems_pwd} \
                --longitude_min {params.lon_min} \
                --longitude_max {params.lon_max} \
                --latitude_min {params.lat_min} \
                --latitude_max {params.lat_max} \
                --date_min {params.date_min} \
                --date_max {params.date_max} && \
        touch workflow/logs/{date.today().strftime('%Y-%m-%d')}_download_cmems_biogeochemistry.done
        """

rule preprocess_era5:
    input:
        expand("workflow/logs/{current_date}_download_era5.done", current_date=date.today().strftime('%Y-%m-%d'))
    output:
        expand("workflow/logs/{current_date}_preprocess_era5.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_preprocess_era5.log", current_date=date.today().strftime('%Y-%m-%d'))
    shell:
        """
        sudo docker run \
            -v {data_dir_path}/download/{date.today().strftime('%Y-%m-%d')}/era5:/data/input \
            -v {data_dir_path}/preprocout/{date.today().strftime('%Y-%m-%d')}:/data/output \
            getera ERA5_convert2_FM_and_merge_allVars.py \
                --input /data/input \
                --output /data/output && \
        touch workflow/logs/{date.today().strftime('%Y-%m-%d')}_preprocess_era5.done
        """

rule create_random_DFMWAQ_folder:
    output:
        expand("workflow/logs/{current_date}_create_random_DFMWAQ_folder.done", current_date=date.today().strftime('%Y-%m-%d'))
    shell:
        "sudo mkdir -p /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/DFMWAQ_input && \
        touch workflow/logs/{date.today().strftime('%Y-%m-%d')}_create_random_DFMWAQ_folder.done"

rule preprocess_cmems:
    input:
        expand("workflow/logs/{current_date}_create_random_DFMWAQ_folder.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_cmems_physics.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_cmems_biogeochemistry.done", current_date=date.today().strftime('%Y-%m-%d'))
    output:
        expand("workflow/logs/{current_date}_preprocess_cmems.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_preprocess_cmems.log", current_date=date.today().strftime('%Y-%m-%d'))
    shell:
        """
        sudo docker run \
            -v {data_dir_path}/download/{date.today().strftime('%Y-%m-%d')}/cmems:/data/input \
            -v {model_dir_path}:/data/model \
            -v {data_dir_path}/preprocout/{date.today().strftime('%Y-%m-%d')}:/data/output \
            preprocessing boundary.py \
                --interp true \
                --simultaneous true \
                --steric true \
                --input /data/input \
                --model /data/model \
                --output /data/output && \
        touch workflow/logs/{date.today().strftime('%Y-%m-%d')}_preprocess_cmems.done
        """

rule preprocess_fes2012:
    input:
        expand("{fes2012_data_dir_path}/2N2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/E2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/J1_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/K1_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/K2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/L2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/LA2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/M2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/M3_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/M4_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/M6_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/M8_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/MF_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/MKS2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/MM_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/MN4_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/MS4_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/MSF_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/MTM_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/MU2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/N2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/N4_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/NU2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/O1_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/P1_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/Q1_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/R2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/S1_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/S2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/S4_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/SSA_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/T2_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path']),
        expand("{fes2012_data_dir_path}/Z0_FES2012_SLEV.nc", fes2012_data_dir_path=config['fes2012_data_dir_path'])
    output:
        "workflow/logs/preprocess_fes2012.done"
    log:
        "workflow/logs/preprocess_fes2012.log"
    params:
        fes2012_data_dir_path = config['fes2012_data_dir_path'],
        model_dir_path = config['model_dir_path'],
        data_dir_path = config['data_dir_path'],
        lon_min = config['lon_min'],
        lon_max = config['lon_max'],
        lat_min = config['lat_min'],
        lat_max = config['lat_max'],
        plifile1 = config['plifile1'],
        plifile2 = config['plifile2']
    shell:
        """
         sudo docker run \
             -v {params.fes2012_data_dir_path}:/data/input \
             -v {params.model_dir_path}:/data/model \
             -v {params.data_dir_path}/preprocout:/data/output \
             preprocessing tide.py \
                 --fespath /data/input \
                 --coords "{params.lon_min}, {params.lon_max}, {params.lat_min}, {params.lat_max}" \
                 --pli {params.plifile1} \
                 --pli {params.plifile2} \
                 --output /data/output \
                 --model /data/model && \
        touch workflow/logs/preprocess_fes2012.done
        """

rule copy_preprocessed_data_to_model_input_folder:
    input:
        expand("workflow/logs/{current_date}_preprocess_cmems.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_preprocess_era5.done", current_date=date.today().strftime('%Y-%m-%d')),
        "workflow/logs/preprocess_fes2012.done"
    output:
        expand("workflow/logs/{current_date}_copy_preprocessed_data_to_model_input_folder.done", \
               current_date=date.today().strftime('%Y-%m-%d'))
    shell:
        "cp -r \
            /home/centos/data/preprocout/tide_east2.bc \
            /home/centos/data/preprocout/tide_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/DFMWAQ_east2_tmp.ext \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/DFMWAQ_input \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/DFMWAQ_south2_tmp.ext \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/Diat_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/Diat_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/east2.pli \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/Green_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/Green_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/NO3_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/NO3_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/Opal_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/Opal_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/OXY_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/OXY_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/PO4_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/PO4_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/POC1_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/POC1_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/PON1_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/PON1_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/POP1_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/POP1_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/salinity_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/salinity_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/Si_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/Si_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/south2.pli \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/steric_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/steric_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/temperature_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/temperature_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/uxuy_east2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/uxuy_south2.bc \
            /home/centos/data/preprocout/{date.today().strftime('%Y-%m-%d')}/era5_FM.nc \
            /home/centos/use-case-hisea/fm_model/input/. && \
            touch workflow/logs/{date.today().strftime('%Y-%m-%d')}_copy_preprocessed_data_to_model_input_folder.done"

rule update_mdu_file: #TODO Bjorn, continue here
    input:
        expand("workflow/logs/{current_date}_download_era5.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_create_random_DFMWAQ_folder.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_cmems_physics.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_cmems_biogeochemistry.done", current_date=date.today().strftime('%Y-%m-%d')),
        "workflow/logs/preprocess_fes2012.done",
        expand("workflow/logs/{current_date}_preprocess_era5.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_preprocess_cmems.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_copy_preprocessed_data_to_model_input_folder.done", \
                current_date=date.today().strftime('%Y-%m-%d')),
    output:
        touch(expand("workflow/logs/{current_date}_update_mdu_file.done", current_date=date.today().strftime('%Y-%m-%d')))
    run:
        from delft3dfm_helpers import get_tref, update_mdu_tstart_tstop
        update_mdu_tstart_tstop(mdufile = config['cdsapirc_loc'], date_min=config['date_min'], date_max=config['date_max'])

rule run_delft3dfm:
    input:
        expand("workflow/logs/{current_date}_download_era5.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_create_random_DFMWAQ_folder.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_cmems_physics.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_cmems_biogeochemistry.done", current_date=date.today().strftime('%Y-%m-%d')),
        "workflow/logs/preprocess_fes2012.done",
        expand("workflow/logs/{current_date}_preprocess_era5.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_preprocess_cmems.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_copy_preprocessed_data_to_model_input_folder.done", \
                current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_update_mdu_file.done", current_date=date.today().strftime('%Y-%m-%d'))
    output:
        expand("workflow/logs/{current_date}_run_delft3dfm.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_run_delft3dfm.log", current_date=date.today().strftime('%Y-%m-%d'))
    shell:
        """
        sudo docker run \
            -v {model_dir_path}:/data \
            --shm-size=4gb \
            --ulimit stack=-1 \
            -t deltares/delft3dfm:latest && \
        touch workflow/logs/{date.today().strftime('%Y-%m-%d')}_run_delft3dfm.done
        """
