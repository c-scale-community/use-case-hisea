configfile: "workflow/config.yml"
from datetime import date
import sys
sys.path.append('scripts/workflow_helpers')
sys.path.append('scripts/delft3dfm_helpers')
from workflow_helpers import set_date_range, check_fes2012_files_exist
from delft3dfm_helpers import get_tref, update_mdu_tstart_tstop
import os

rule set_date_range:
    input:
        "workflow/config.yml"
    output:
        touch(expand("workflow/logs/{current_date}_set_date_range.done", current_date=date.today().strftime('%Y-%m-%d')))
    params:
        run_mode = config['run_mode'],
        forecast_window_mid_pt = config['forecast_window_mid_pt'],
        forecast_window = config['forecast_window'],
        tstart = config['tstart'],
        tstop = config['tstop']
    run:
        if params.run_mode == 'forecast':
            date_min, date_max = set_date_range(run_mode=params.run_mode,
                                                forecast_window_mid_pt=params.forecast_window_mid_pt,
                                                forecast_window=params.forecast_window,
                                                outfile='workflow/config.yml')
        else:
            date_min, date_max = set_date_range(run_mode=params.run_mode,
                                                tstart=params.tstart,
                                                tstop=params.tstop,
                                                outfile='workflow/config.yml')

rule update_mdu_file:
    input:
        expand("workflow/logs/{current_date}_set_date_range.done", current_date=date.today().strftime('%Y-%m-%d'))
    output:
        touch(expand("workflow/logs/{current_date}_update_mdu_file.done", current_date=date.today().strftime('%Y-%m-%d')))
    params:
        mdufile = lambda wc: config['mdufile'],
        date_min = config['date_min'],
        date_max = config['date_max'],
    run:
        update_mdu_tstart_tstop(mdufile = params.mdufile, date_min=params.date_min, date_max=params.date_max)

rule download_era5:
    input:
        expand("workflow/logs/{current_date}_set_date_range.done", current_date=date.today().strftime('%Y-%m-%d')),
    output:
        expand("workflow/logs/{current_date}_download_era5.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_download_era5.log", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        cdsapirc_loc = lambda wc: config['cdsapirc_loc'],
        data_dir_path = lambda wc: config['data_dir_path'],
        lon_min = config['lon_min'],
        lon_max = config['lon_max'],
        lat_min = config['lat_min'],
        lat_max = config['lat_max'],
        date_min = config['date_min'],
        date_max = config['date_max'],
    shell:
        """
        sudo docker run \
            -v {params.cdsapirc_loc}:/root/.cdsapirc \
            -v {params.data_dir_path}/download/$(date +%Y-%m-%d):/data \
            download-input python download_era5.py \
                --longitude_min {params.lon_min} \
                --longitude_max {params.lon_max} \
                --latitude_min {params.lat_min} \
                --latitude_max {params.lat_max} \
                --date_min {params.date_min} \
                --date_max {params.date_max} && \
        touch workflow/logs/$(date +%Y-%m-%d)_download_era5.done
        """

rule download_cmems_physics:
    input:
        expand("workflow/logs/{current_date}_set_date_range.done", current_date=date.today().strftime('%Y-%m-%d')),
    output:
        expand("workflow/logs/{current_date}_download_cmems_physics.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_download_cmems_physics.log", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        data_dir_path = lambda wc: config['data_dir_path'],
        cmems_uname = config['cmems_uname'],
        cmems_pwd = config['cmems_pwd'],
        lon_min = config['lon_min'],
        lon_max = config['lon_max'],
        lat_min = config['lat_min'],
        lat_max = config['lat_max'],
        date_min = config['date_min'],
        date_max = config['date_max']
    shell:
        """
        sudo docker run \
            -v {params.data_dir_path}/download/$(date +%Y-%m-%d):/data \
            download-input python download_cmems_physics.py \
                --username {params.cmems_uname} \
                --password {params.cmems_pwd} \
                --longitude_min {params.lon_min} \
                --longitude_max {params.lon_max} \
                --latitude_min {params.lat_min} \
                --latitude_max {params.lat_max} \
                --date_min {params.date_min} \
                --date_max {params.date_max} && \
        touch workflow/logs/$(date +%Y-%m-%d)_download_cmems_physics.done
        """

rule download_cmems_biogeochemistry:
    input:
        expand("workflow/logs/{current_date}_set_date_range.done", current_date=date.today().strftime('%Y-%m-%d')),
    output:
        expand("workflow/logs/{current_date}_download_cmems_biogeochemistry.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_download_cmems_biogeochemistry.log", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        data_dir_path = lambda wc: config['data_dir_path'],
        cmems_uname = config['cmems_uname'],
        cmems_pwd = config['cmems_pwd'],
        lon_min = config['lon_min'],
        lon_max = config['lon_max'],
        lat_min = config['lat_min'],
        lat_max = config['lat_max'],
        date_min = config['date_min'],
        date_max = config['date_max']
    shell:
        """
        sudo docker run \
            -v {params.data_dir_path}/download/$(date +%Y-%m-%d):/data \
            download-input python download_cmems_biogeochemistry.py \
                --username {params.cmems_uname} \
                --password {params.cmems_pwd} \
                --longitude_min {params.lon_min} \
                --longitude_max {params.lon_max} \
                --latitude_min {params.lat_min} \
                --latitude_max {params.lat_max} \
                --date_min {params.date_min} \
                --date_max {params.date_max} && \
        touch workflow/logs/$(date +%Y-%m-%d)_download_cmems_biogeochemistry.done
        """

rule preprocess_era5:
    input:
        expand("workflow/logs/{current_date}_download_era5.done", current_date=date.today().strftime('%Y-%m-%d'))
    output:
        expand("workflow/logs/{current_date}_preprocess_era5.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_preprocess_era5.log", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        data_dir_path = lambda wc: config['data_dir_path']
    shell:
        """
        sudo docker run \
            -v {params.data_dir_path}/download/$(date +%Y-%m-%d)/era5:/data/input \
            -v {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d):/data/output \
            getera ERA5_convert2_FM_and_merge_allVars.py \
                --input /data/input \
                --output /data/output && \
        touch workflow/logs/$(date +%Y-%m-%d)_preprocess_era5.done
        """

rule create_random_DFMWAQ_folder:
    output:
        expand("workflow/logs/{current_date}_create_random_DFMWAQ_folder.done", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        data_dir_path = lambda wc: config['data_dir_path']
    shell:
        """
        sudo mkdir -p {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/DFMWAQ_input && \
        touch workflow/logs/$(date +%Y-%m-%d)_create_random_DFMWAQ_folder.done
        """

rule preprocess_cmems:
    input:
        expand("workflow/logs/{current_date}_create_random_DFMWAQ_folder.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_cmems_physics.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_cmems_biogeochemistry.done", current_date=date.today().strftime('%Y-%m-%d'))
    output:
        expand("workflow/logs/{current_date}_preprocess_cmems.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_preprocess_cmems.log", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        data_dir_path = lambda wc: config['data_dir_path'],
        model_dir_path = lambda wc: config['model_dir_path'],
    shell:
        """
        sudo docker run \
            -v {params.data_dir_path}/download/$(date +%Y-%m-%d)/cmems:/data/input \
            -v {params.model_dir_path}:/data/model \
            -v {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d):/data/output \
            preprocessing boundary.py \
                --interp true \
                --simultaneous true \
                --steric true \
                --input /data/input \
                --model /data/model \
                --output /data/output && \
        touch workflow/logs/$(date +%Y-%m-%d)_preprocess_cmems.done
        """

rule check4fes2012_files:
    output:
        "workflow/logs/check4fes2012_files.done"
    params:
        fes2012_data_dir_path = lambda wc: config['fes2012_data_dir_path']
    run:
        fes2012_files_exist = check_fes2012_files_exist(params.fes2012_data_dir_path)
        if fes2012_files_exist:
            os.system('touch workflow/logs/check4fes2012_files.done')

rule preprocess_fes2012:
    input:
        "workflow/logs/check4fes2012_files.done"
    output:
        "workflow/logs/preprocess_fes2012.done"
    log:
        "workflow/logs/preprocess_fes2012.log"
    params:
        data_dir_path = lambda wc: config['data_dir_path'],
        model_dir_path = lambda wc: config['model_dir_path'],
        fes2012_data_dir_path = lambda wc: config['fes2012_data_dir_path'],
        lon_min = config['lon_min'],
        lon_max = config['lon_max'],
        lat_min = config['lat_min'],
        lat_max = config['lat_max'],
        plifile1 = config['plifile1'],
        plifile2 = config['plifile2']
    shell:
        """
        sudo docker run \
            -v {params.fes2012_data_dir_path}:/data/input \
            -v {params.model_dir_path}:/data/model \
            -v {params.data_dir_path}/output/preprocessing:/data/output \
            preprocessing tide.py \
                --fespath /data/input \
                --coords "{params.lon_min}, {params.lon_max}, {params.lat_min}, {params.lat_max}" \
                --pli {params.plifile1} \
                --pli {params.plifile2} \
                --output /data/output \
                --model /data/model && \
        touch workflow/logs/preprocess_fes2012.done
        """

rule copy_preprocessed_data_to_model_input_folder:
    input:
        expand("workflow/logs/{current_date}_preprocess_cmems.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_preprocess_era5.done", current_date=date.today().strftime('%Y-%m-%d')),
        "workflow/logs/preprocess_fes2012.done"
    output:
        expand("workflow/logs/{current_date}_copy_preprocessed_data_to_model_input_folder.done", \
               current_date=date.today().strftime('%Y-%m-%d'))
    params:
        data_dir_path = lambda wc: config['data_dir_path'],
        model_dir_path = lambda wc: config['model_dir_path'],
    shell:
        "cp -r \
            {params.data_dir_path}/output/preprocessing/tide_east2.bc \
            {params.data_dir_path}/output/preprocessing/tide_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/DFMWAQ_east2_tmp.ext \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/DFMWAQ_input \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/DFMWAQ_south2_tmp.ext \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/Diat_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/Diat_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/east2.pli \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/Green_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/Green_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/NO3_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/NO3_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/Opal_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/Opal_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/OXY_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/OXY_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/PO4_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/PO4_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/POC1_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/POC1_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/PON1_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/PON1_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/POP1_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/POP1_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/salinity_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/salinity_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/Si_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/Si_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/south2.pli \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/steric_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/steric_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/temperature_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/temperature_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/uxuy_east2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/uxuy_south2.bc \
            {params.data_dir_path}/output/preprocessing/$(date +%Y-%m-%d)/era5_FM.nc \
            {params.model_dir_path}/input/. && \
            touch workflow/logs/$(date +%Y-%m-%d)_copy_preprocessed_data_to_model_input_folder.done"

rule workaround_update_RadSurf_daily:
    input:
        expand("workflow/logs/{current_date}_set_date_range.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_update_mdu_file.done", current_date=date.today().strftime('%Y-%m-%d')),
    output:
        expand("workflow/logs/{current_date}_workaround_update_RadSurf_daily.done", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        mdufile = lambda wc: config['mdufile'],
        model_dir_path = lambda wc: config['model_dir_path'],
        date_max = config['date_max']
    shell:
        """
        python scripts/workarounds/update_existing_RadSurf_daily_dot_tim.py \
                                   --mdufile {params.mdufile} \
                                   --filename_in {params.model_dir_path}/input/RadSurf_daily.tim \
                                   --filename_out {params.model_dir_path}/input/RadSurf_daily.tim \
                                   --date_max {params.date_max} && \
        touch workflow/logs/$(date +%Y-%m-%d)_workaround_update_RadSurf_daily.done
        """

rule run_delft3dfm:
    input:
        expand("workflow/logs/{current_date}_set_date_range.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_update_mdu_file.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_era5.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_cmems_physics.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_download_cmems_biogeochemistry.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_create_random_DFMWAQ_folder.done", current_date=date.today().strftime('%Y-%m-%d')),
        "workflow/logs/preprocess_fes2012.done",
        expand("workflow/logs/{current_date}_preprocess_era5.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_preprocess_cmems.done", current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_copy_preprocessed_data_to_model_input_folder.done", \
                current_date=date.today().strftime('%Y-%m-%d')),
        expand("workflow/logs/{current_date}_workaround_update_RadSurf_daily.done", current_date=date.today().strftime('%Y-%m-%d'))
    output:
        expand("workflow/logs/{current_date}_run_delft3dfm.done", current_date=date.today().strftime('%Y-%m-%d'))
    log:
        expand("workflow/logs/{current_date}_run_delft3dfm.log", current_date=date.today().strftime('%Y-%m-%d'))
    params:
        model_dir_path = lambda wc: config['model_dir_path']
    shell:
        """
        sudo docker run \
            -v {params.model_dir_path}:/data \
            --shm-size=4gb \
            --ulimit stack=-1 \
            -t deltares/delft3dfm:latest && \
        touch workflow/logs/$(date +%Y-%m-%d)_run_delft3dfm.done
        """

#rule cleanup_model_input_folder:
    #input:
        #"workflow/logs/2023-01-23_run_delft3dfm.done"
    #output:
        #touch("workflow/logs/2023-01-23_cleanup_model_input_folder.done")
    #shell:
        #"sudo rm -r \
            #/home/centos/use-case-hisea/fm_model/input/tide_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/tide_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/DFMWAQ_east2_tmp.ext \
            #/home/centos/use-case-hisea/fm_model/input/DFMWAQ_input \
            #/home/centos/use-case-hisea/fm_model/input/DFMWAQ_south2_tmp.ext \
            #/home/centos/use-case-hisea/fm_model/input/Diat_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/Diat_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/east2.pli \
            #/home/centos/use-case-hisea/fm_model/input/Green_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/Green_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/NO3_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/NO3_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/Opal_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/Opal_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/OXY_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/OXY_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/PO4_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/PO4_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/POC1_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/POC1_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/PON1_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/PON1_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/POP1_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/POP1_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/salinity_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/salinity_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/Si_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/Si_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/south2.pli \
            #/home/centos/use-case-hisea/fm_model/input/steric_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/steric_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/temperature_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/temperature_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/uxuy_east2.bc \
            #/home/centos/use-case-hisea/fm_model/input/uxuy_south2.bc \
            #/home/centos/use-case-hisea/fm_model/input/era5_FM.nc"
#
#rule move_raw_data_to_output_folder:
    #input:
        #"workflow/logs/2023-01-23_run_delft3dfm.done"
    #output:
        #touch("workflow/logs/2023-01-23_move_raw_data_to_output_folder.done")
    #shell:
        #"mkdir -p /home/centos/data/output/2023-01-23/raw && \
         #sudo mv \
             #/home/centos/use-case-hisea/fm_model/DFM_OUTPUT_tttz_waq/* \
             #/home/centos/data/output/2023-01-23/raw/."
#
#rule cleanup_model_folder:
    #input:
        #"workflow/logs/2023-01-23_run_delft3dfm.done",
        #"workflow/logs/2023-01-23_move_raw_data_to_output_folder.done"
    #output:
        #touch("workflow/logs/2023-01-23_cleanup_model_folder.done")
    #shell:
        #"sudo rm \
            #/home/centos/use-case-hisea/fm_model/DFM_interpreted_idomain_myortho3_net.nc \
            #/home/centos/use-case-hisea/fm_model/log*.irlog \
            #/home/centos/use-case-hisea/fm_model/myortho3_*_net.nc \
            #/home/centos/use-case-hisea/fm_model/tttz_waq_*.cache \
            #/home/centos/use-case-hisea/fm_model/tttz_waq_*.mdu \
            #/home/centos/use-case-hisea/fm_model/unstruc.dia"
